name: Build and Deploy Documentation

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev build-essential
          echo "ruby ruby-dev build-essential" > apt-packages-list

      - name: Install Ruby gems
        run: |
          gem install --no-document asciidoctor asciidoctor-diagram rouge

      - name: Build documentation and copy it into Docs folder
        run: |
          cd asciidoc
          make html
          cd output
          mv report.html index.html
          cd ..
          cp -r src/resources ../output

      - name: Create the zip archive
        run: |
          cd asciidoc/output
          zip -r documentation.zip index.html resources/    

      - name: Upload report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation-report
          path: asciidoc/output/documentation.zip
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout gh-pages Branch and clean
        run: |
          git fetch origin gh-pages || true
          if git show-ref --verify --quiet refs/remotes/origin/gh-pages; then
              git checkout gh-pages || git checkout -B gh-pages
          else
              git checkout -B gh-pages
          fi
          rm -rf docs

      - name: Download Documentation Artifact
        uses: actions/download-artifact@v4
        with:
          name: documentation-report
          path: docs

      - name: List contents of docs directory
        run: |
          ls -la docs 

      - name: Unzip the Documentation
        run: |
          cd docs
          unzip documentation.zip
          
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true    

      - name: Commit and Push Documentation to gh-pages
        run: |
          git add docs
          git commit -m "docs: Update documentation for gh-pages"
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
